#2차원 리스트 사용하기
#2차원 리스트는 다음과 같이 가로x세로 형태로 이루어져 있으며
#행(column)과 열(row) 모두 0 부터 시작함

#2차원 리스트는 리스트 안에 리스트를 넣어서 만들 수 있으며 안쪽의
#각 리스트는 ,(콤마)로 구분함

#그럼 숫자 2개씩 3묶음으로 리스트를 만들어보자
#a=[[10, 20], [30, 40], [50, 60]]
#print(a)

#리스트를 한 줄로 입력했지만, 가로, 세로를 알아보기 쉽게 세줄로 입력해도 됨
#a=[[10, 20], 
#   [30, 40], 
#   [50, 60]]
#print(a)

#2차원 리스트의 요소에 접근하기
#a = [[10, 20], [30, 40], [50, 60]]
#print(a[0][1]) #인덱스 0번째의 1번째 요소값 출력

#print(a[1][1]) #인덱스 1번째의 1번째 요소값 출력

#a[2][0] = 5000 #인덱스 2번째의 0번째 요소값 변경
#print(a[2][0]) #인덱스 2번째의 0번째 요소값 출력

# -----------------------------------------------------------------------
#반복문으로 2차원 리스트의 요소를 모두 출력하기
#a= [[10, 20],[30, 40],[50, 60]]
#for x, y in a: # 리스트의 가로 한 줄(안쪽 리스트)에서 요소 두 개를 꺼냄
#    print(x, y)

#다음 내용을 IDLE의 소스 코드 편집 창에 입력한 뒤 실행해보자
#a = [[10, 20],[30, 40],[50, 60]]
#for i in a:     # a 에서 안쪽 리스트를 꺼냄
#    for j in i: # 안쪽 리스트에서 요소를 하나씩 꺼냄
#        print(j, end=' ')
#    print()

#for와 range 사용하기
#이번에는 for range에 세로 크기와 가로 크기를 지정해서 2차원
#리스트의 요소를 인덱스로 접근해보자.
#a = [[10, 20],[30, 40],[50, 60]]
#for i in range(len(a)):         #세로크기
#    for j in range(len(a[i])):  #가로크기
#        print(a[i][j], end=' ')
#    print()
#주의할 점은 len으로 2차원 리스트 a의 크기를 구하면 리스트 안에 들어있는
#모든 요소의 개수가 아니라 안쪽 리스트의 개수(세로 크기)가 나온다는 점

#요소에 접근할 때는 리스트[세로인덱스][가로인덱스] 형식으로 접근함
#세로 인덱스에 변수 i를, 가로 인덱스에 변수 j를 지정해줌
#print(a[i][j], end=' ')

#While 반복문을 한 번 사용하기
#a=[[10, 20],[30, 40],[50, 60]]
#i = 0
#while i < len(a): # 반복할 때 리스트의 크기 활용(세로 크기)
#    x, y = a[i]   # 요소 두 개를 한꺼번에 가져오기
#    print(x, y)
#    i += 1        # 인덱스를 1 증가시킴
#while 반복문을 사용할 때도 리스트의 크기를 활용하면 편리함

#while 반복문을 두 번 사용하기
#a = [[10, 20],[30, 40],[50, 60]]
#i = 0
#while i < len(a):
#    j = 0
#    while j < len(a[i]):
#        print(a[i][j], end=' ')
#        j+=1
#    print()
#    i+=1

# ---------------------------------------------------------------
#반복문으로 리스트 만들기

#for 반복문으로 1차원 리스트 만들기
#a=[] # 빈 리스트 생성
#for i in range(10):
#    a.append(0) # append함수로 0 요소 추가
#print(a)

#for 반복문으로 2차원 리스트 만들기
#a = [] #빈 리스트 생성

#for i in range(3):      # 안쪽 리스트로 사용할 빈 리스트 생성 (세로)
#    line = []
#   for j in range(2):  # 안쪽 리스트에 0 추가
#        line.append(0)  # 전체 리스트에 안쪽 리스트를 추가
#    a.append(line)
#print(a)

#세로 크기만큼 반복하면서 안쪽 리스트로 사용할 빈 리스트 line을 만듬
#append에 리스트를 넣으면 리스트 안에 리스트가 들어가는 특성을 이용함

#리스트 표현식으로 2차원 리스트 만들기
#a =[[0 for j in range(2)] for i in range(3)]
#print(a)

#만약 for 반복문을 한 번만 사용하고 싶다면 다음과 같이 식 부분에서 
#리스트 자체를 곱해주면 됨
#a = [[0] * 2 for i in range(3)]
#print(a)

#톱니형 리스트 만들기
# 가로 크기를 알고 있다고 가정하고 리스트를 만들어보자
#a = [3, 3, 3, 2, 5] #가로 크기를 저장한 리스트
#b = []              #빈 리스트 생성

#for i in a:         # 가로 크기를 저장한 리스트로 반복
#    line = []       # 안쪽 리스트로 사용할 빈 리스트 생성
#    for j in range(i):  # 리스트 a에 저장된 가로 크기만큼 반복
#        line.append(0)
#    b.append(line)      # 리스트 b에 안쪽 리스트를 추가
#print(b)

#리스트 표현식을 활용하면 간단하게 만들수 있음
#a = [[0] * i for i in [3, 1, 2, 3 ,5]]
#print(a)

# -------------------------------------------------------------------
#2차원 리스트의 할당과 복사 알아보기

#2차원 리스트를 만든 뒤 다른 변수에 할당하고, 요소를 변경해보면 두 리스트에 모두 반영됨
#a = []

#for i in range(3):
#    line = []
#    for j in range(2):
#       line.append(0)
#    a.append(line)
#b = a
#print(b)

#a = [[0] * 2 for i in range(3)]
#b = a
#print(a)

#a = [[10, 20],[30, 40]] # a 리스트에 2차원 리스트 할당
#b = a                   # a 리스트를 b리스트에 복사
#b[0][1] = 500           # b 리스트에 0번째리스트 1번째요소를 500으로 변경
#print(b)                # b 리스트 출력
#print(a)                # a 리스트 출력
#리스트 a 를 copy 메서드로 b에 복사한 뒤 b의 요소를 변경해보면 a와 b에 모두 반영됨

a = [[10, 20],[30, 40]]
b = a.copy()
b[0][1] = 500
print(a)